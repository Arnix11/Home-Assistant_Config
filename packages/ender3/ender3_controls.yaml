script:
  ender3_safe_power_down:
    alias: Ender3 Safe Power Down
    sequence:
      - condition: not
        conditions:
          condition: state
          entity_id: binary_sensor.octoprint_printing
          state: 'on'
      - service: switch.turn_on
        entity_id: switch.octoprint_shutdown_system
      - wait_template: "{{ is_state('sensor.octoprint_print_status', 'unavailable') }}"
        timeout: '00:01:00'
        continue_on_timeout: false
      - delay:
          seconds: 10
      - service: switch.turn_off
        entity_id: switch.3d_printer_psu

  ender3_shutdown_when_cool:
    alias: Ender3 Filament Change
    sequence:
      - condition: state
        entity_id: binary_sensor.octoprint_printing
        state: 'off'
      - condition: state
        entity_id: automation.ender_3_auto_shutdown_when_done
        state: 'on'
      - wait_template: "{{ states('sensor.octoprint_tool_0_temperature')|int < 10  }}"
        timeout: '00:10:00'
        continue_on_timeout: false
      - service: script.ender3_safe_power_down

  ender3_cancel_print:
    alias: Ender3 Cancel
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - service: switch.turn_on
        entity_id: switch.octoprint_cancel_print

  ender3_pause_print:
    alias: Ender3 Pause
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - service: switch.turn_on
        entity_id: switch.octoprint_pause_print
  
  ender3_resume_print:
    alias: Ender3 Resume
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - service: switch.turn_off
        entity_id: switch.octoprint_pause_print

  ender3_home:
    alias: Ender3 Homing
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - condition: state
        entity_id: sensor.octoprint_print_status
        state: 'Operational'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/home"
          payload: "[\"x\", \"y\", \"z\"]"

  ender3_level_bed:
    alias: Ender3 Bed Levelling
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - condition: state
        entity_id: sensor.octoprint_print_status
        state: 'Operational'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "G29"
  
  ender3_cooldown:
    alias: Ender3 cooldown
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - condition: state
        entity_id: sensor.octoprint_print_status
        state: 'Operational'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M140 S0"
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M104 S0"

  ender3_preheat_petg:
    alias: Ender3 PETG Preheat 
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - condition: state
        entity_id: sensor.octoprint_print_status
        state: 'Operational'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M140 S75"
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M104 S215"

  ender3_preheat_pla:
    alias: Ender3 PLA Preheat
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - condition: state
        entity_id: sensor.octoprint_print_status
        state: 'Operational'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M140 S55"
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M104 S185"

  ender3_change_filament:
    alias: Ender3 Filament Change
    sequence:
      - condition: state
        entity_id: switch.ender3_controls
        state: 'on'
      - service: mqtt.publish
        data:
          topic: "octoPrint/hassControl/commands"
          payload: "M600"

automation:
  - alias: Ender 3 Auto shutdown when done
    description: Shutdown the printer once is has cooled down
    trigger:
      - platform: state
        entity_id: binary_sensor.octoprint_printing
        from: 'on'
        to: 'off'
    action:
      - service: script.ender3_shutdown_when_cool